import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Random;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		Scanner scanner =new Scanner(System.in);
		// TODO Auto-generated method stub
		ArrayList<Domino> listeDomino=new ArrayList<>(); // Création de deux listes de domino, la première contient tous les dominos de la partie et la deuxième contient les dominos tirés
		ArrayList<Domino> listeDominoTirage=new ArrayList<>();
		int nbrJoueur=0;
		int nbrIA=0;
		while(nbrJoueur>4 || nbrJoueur<2) {
			System.out.println("Nombre de Joueurs ? (2,3,4)");
			nbrJoueur=scanner.nextInt();
			System.out.println("Nombre d'IA");
			nbrIA=scanner.nextInt();
		}
		Game game=new Game(nbrJoueur,listeDomino); //Création d'un jeu
		scanner.nextLine();
		ArrayList<Joueur> listeJoueur=new ArrayList<>();
		ArrayList<Boolean> listeModeOptionnel = new ArrayList<>(); // nous avons décidé de faire une liste de booléen qui est plus simple à manier
		System.out.println("Voulez-vous jouer en mode empire du milieu ?(true or false)");
		boolean empire = scanner.nextBoolean();
		if(empire) {
			listeModeOptionnel.add(empire); // on ajoute les différents modes de jeu si l'utilisateur le veut
		}
		else{
			listeModeOptionnel.add(empire);
		}
		System.out.println("Voulez-vous jouer en mode harmonie ?(true or false)");
		boolean harmonie = scanner.nextBoolean();
		if(harmonie) {
			listeModeOptionnel.add(harmonie);
		}
		else{
			listeModeOptionnel.add(harmonie);
		}
		for(int i=1;i<=nbrIA;i++) { // Création des IA
			String[][]plateauType=new String[11][11]; //La création des deux matrices dans le for est essentiel pour éviter que cahque joueur ait le meme plateau
			int[][] plateauCouronne=new int[11][11]; //Nous avons décidé de faire deux plateaux pour une plus simple manipulation
			plateauType[5][5]="Chateau"; //Placement du chateau au milieu du plateau
			Joueur joueur = new Joueur("IA "+i,"Gris",plateauType,plateauCouronne,false);
			listeJoueur.add(joueur); //on ajoute le joueur à une liste de joueurs
			if(nbrJoueur==2) {
				listeJoueur.add(joueur); //on ajoute une deuxième fois le joueur pour avoir l'équivalent de 4 rois
			}
		}
		scanner.nextLine();
		for(int k=1;k<=nbrJoueur-nbrIA;k++) { // on fait de meme que pour l'IA
			String[][]plateauType=new String[11][11];
			int[][] plateauCouronne=new int[11][11];
			plateauType[5][5]="Chateau";
			System.out.println("Joueur "+k);
			System.out.println("Votre nom");
			String name=scanner.nextLine();
			ArrayList<String> listeCouleur=new ArrayList(Arrays.asList("Vert","vert","Bleu","bleu","Rose","rose","Jaune","jaune")); //on entre dans une liste toutes les couleurs possibles en deux versions
			String color="";
			while(!listeCouleur.contains(color)) {
				System.out.println("Votre couleur (Rose, Vert, Bleu ou Jaune)");
				color=scanner.nextLine();
			}
			Joueur joueur =new Joueur(name,color,plateauType,plateauCouronne,true);
			listeJoueur.add(joueur);
			if(nbrJoueur==2) {
				listeJoueur.add(joueur);
			}
		}
		
		Collections.shuffle(listeJoueur); //on mélange aléatoirement la liste de joueur pour le premier tirage des rois
		listeDomino=game.creationDomino(nbrJoueur); // on importe tous les dominos
		while(listeDomino.size()!=0) {
			listeDominoTirage=game.tirageDomino(nbrJoueur,listeDomino); //on met tous les dominos tirés aléatoirement dans une liste
			ArrayList <Joueur> listeJoueurPlacement = new ArrayList(listeJoueur); //on fait une copie de la liste car la liste joueur va être modifié durant la prochaine fonction
			ArrayList<Domino> listeDominoSortie=game.choixDomino(listeDominoTirage,listeJoueur); //on sort les dominos suivant une liste qui correspond à la copie de la liste joueur créée précedemment
			listeJoueurPlacement.get(0).afficherPlateau(listeJoueurPlacement.get(0).getPlateauType(),listeJoueurPlacement.get(0).getPlateauCouronne());
			listeJoueurPlacement.get(0).afficherMatriceDomino(listeJoueurPlacement.get(0).getPlateauType(),listeJoueurPlacement.get(0).getPlateauCouronne());
			listeJoueurPlacement.get(1).afficherMatriceDomino(listeJoueurPlacement.get(1).getPlateauType(),listeJoueurPlacement.get(1).getPlateauCouronne());
			game.tourPlacageDomino(listeJoueurPlacement,listeDominoSortie,listeModeOptionnel); // On fait le tour de placement du domino
		}
		game.vainqueur(listeJoueur,listeModeOptionnel);
	}

}
